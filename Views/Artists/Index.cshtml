@*@model Tuple<List<ArtistModel>, Dictionary<string, int>,string>*@
@model Tuple<PaginatedListModel<ArtistModel>, Dictionary<string, int>,string>
@{
    var paginatedArtistList = Model.Item1;
    var albumsToArtist = Model.Item2;
    var sortOrder = Model.Item3;
}
<link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
<div class="d-flex justify-content-between bd-highlight">
    <div class="d-flex align-items-center justify-content-between">
        <h1 class="text-muted">Artists</h1>
    </div>
    <div class="d-flex align-items-center justify-content-between">
        <span class="text-muted">
            @{
                if (sortOrder.Equals("name_asc"))
                {
                    //<a id="sort_buttons" href="@Url.Action("Index","Artist",new {sortOrder = "name_desc"})">
                    <a id="sort_buttons" asp-controller="Artist" asp-action="Index" asp-route-sortOrder="name_desc">
                        @*href="@Url.Action("Index","Artist",new {sortOrder = "name_desc"})"*@
                        <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" fill="currentColor" class="bi bi-sort-alpha-down-alt" viewBox="0 0 16 16">
                            <path d="M12.96 7H9.028v-.691l2.579-3.72v-.054H9.098v-.867h3.785v.691l-2.567 3.72v.054h2.645V7z" />
                            <path fill-rule="evenodd" d="M10.082 12.629 9.664 14H8.598l1.789-5.332h1.234L13.402 14h-1.12l-.419-1.371h-1.781zm1.57-.785L11 9.688h-.047l-.652 2.156h1.351z" />
                            <path d="M4.5 2.5a.5.5 0 0 0-1 0v9.793l-1.146-1.147a.5.5 0 0 0-.708.708l2 1.999.007.007a.497.497 0 0 0 .7-.006l2-2a.5.5 0 0 0-.707-.708L4.5 12.293V2.5z" />
                        </svg>
                    </a>
                }
                else
                {
                    //<a id="sort_buttons" href="@Url.Action("Index","Artist",new {sortOrder = "name_asc"})">
                    <a id="sort_buttons" asp-controller="Artist" asp-action="Index" asp-route-sortOrder="name_asc">
                        <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" fill="currentColor" class="bi bi-sort-alpha-down" viewBox="0 0 16 16">
                            <path fill-rule="evenodd" d="M10.082 5.629 9.664 7H8.598l1.789-5.332h1.234L13.402 7h-1.12l-.419-1.371h-1.781zm1.57-.785L11 2.687h-.047l-.652 2.157h1.351z" />
                            <path d="M12.96 14H9.028v-.691l2.579-3.72v-.054H9.098v-.867h3.785v.691l-2.567 3.72v.054h2.645V14zM4.5 2.5a.5.5 0 0 0-1 0v9.793l-1.146-1.147a.5.5 0 0 0-.708.708l2 1.999.007.007a.497.497 0 0 0 .7-.006l2-2a.5.5 0 0 0-.707-.708L4.5 12.293V2.5z" />
                        </svg>
                    </a>
                }
            }
        </span>
    </div>
</div>
@*<h1 class="text-muted">Artists</h1>*@
<div class="wrapper d-flex justify-content-center align-items-center">
    <ul class="list-group list-group-flush justify-content-center text-center w-50">
        @foreach (var artist in paginatedArtistList)
        {
            <li class="list-group-item d-flex justify-content-between align-items-center">
                <a id="link" asp-controller="Artist" asp-action="Index" asp-route-name="@artist.Name">
                @*class="nav-link active p-0" asp-controller="Artist" asp-action="Index" asp-route-name="@artist.Name"*@
                @*href="@Url.Action("Index","Artist",new {name = @artist.Name})"*@
                    <h1>
                        <i>
                            @artist.Name
                        </i>
                    </h1>
                </a>
                <span class="badge bg-primary rounded-pill display-6 text-end p-2">@albumsToArtist[$"{artist.Name}"]</span>
            </li>
        }
    </ul>
</div>
@*@{
    var prevDisabled = !paginatedArtistList.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !paginatedArtistList.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@sortOrder"
   asp-route-pageNumber="@(paginatedArtistList.PageIndex - 1)"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@sortOrder"
   asp-route-pageNumber="@(paginatedArtistList.PageIndex + 1)"
   class="btn btn-default @nextDisabled">
    Next
</a>*@
